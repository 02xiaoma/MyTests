实现的大整数类
	1. 支持由自带的整形(long long)、字符串进行初始化，以及赋值；
	2. 支持加减乘除求模运算，以及对应的自增、自减等运算；
	3. 支持负数，以及对应的求负运算；
	4. 支持比较大小等比较运算；
	5. 支持输出为string

其中，具体实现细节如下：
	1. 具体存储是用一个vector<unsigned char>和一个符号位来存储的；
	2. vector中按照逆序来存储，比如123存储成{3,2,1}，这样算的时候从头到尾进行计算即可；
	3. 设置构造函数和运算等接口实现，使得0被特殊处理，其vector是空，符号位为正；
	4. 四则运算的时候，都实现两个正数的情况，然后对符号特殊处理，比如加法里面把与负号相加划归为正数的相减等；
	5. 加法很简单，维护一个进位变量，然后从头到尾遍历即可。遍历完之后再对进位进行特殊处理；
	6. 减法类似，维护一个借位变量。另外，通过对符号和大小进行特殊处理，使得只用处理大正数减小正数的情况；
	7. 乘法，划归为一位数乘以被乘数，然后各个位乘的结果相加；
	8. 除法和求模，通过长除法实现；
	9. 比较操作，实现了相等比较和小于比较。其它的在此基础上进行实现。
